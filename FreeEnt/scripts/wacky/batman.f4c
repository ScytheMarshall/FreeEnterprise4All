// 0 -> !
chr($67e40 3bit) {
00011000
00122100
00122100
00122100
00122100
00011000
00122100
00011000
}

// 1 -> A
chr($67e58 3bit) {
00111100
01222210
12211221
12211221
12222221
12211221
12211221
01100110
}

// 2 -> B
chr($67e70 3bit) {
01111100
12222210
12211221
12222210
12211221
12211221
12222210
01111100
}

// 3 -> F
chr($67e88 3bit) {
01111110
12222221
12211110
12222210
12211100
12210000
12210000
01100000
}

// 4 -> K
chr($67ea0 3bit) {
01100110
12211221
12212210
12222100
12212210
12211221
12211221
01100110
}

// 5 -> M
chr($67eb8 3bit) {
11000110
22101221
22212221
22222221
22121221
22111221
22101221
11000110
}

// 6 -> O
chr($67ed0 3bit) {
00111100
01222210
12211221
12211221
12211221
12211221
01222210
00111100
}

// 7 -> P
chr($67ee8 3bit) {
01111100
12222210
12211221
12211221
12222210
12211100
12210000
01100000
}

// 8 -> W
chr($67f00 3bit) {
11000110
22101221
22111221
22121221
22222221
22212221
22101221
11000110
}

// 9 -> Z
chr($67f18 3bit) {
01111110
12222221
01112210
00122100
01221000
12211110
12222221
01111110
}


// hack damage routines to display one of these
msfpatch {
    .addr $02CA08
        jsl $=Wacky__BatmanRender
        nop nop

    .new
    Wacky__BatmanRender:
        // use lower 5 bits of damage value to index word
        txa
        xba
        lda #$00
        xba
        and #$1F
        asl a
        asl a
        tax

        lda $=Wacky__ROMData_batman,x
        sta $180c
        inx
        lda $=Wacky__ROMData_batman,x
        sta $180d
        inx
        lda $=Wacky__ROMData_batman,x
        sta $180e
        inx
        lda $=Wacky__ROMData_batman,x
        sta $180f

        rtl
}



// hack "count" status to display !!/AA instead of digits
msfpatch {
    .addr $02DD62
        lda $f07a
        and #$01
        ora #$70
        nop
}
